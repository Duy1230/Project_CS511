<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAByvSURBVHhe7d1d
        iK1neT7w5d6J7qhEIkqMaCBKIyJRxAiKBBRRjOKBZQtK+RMI7ZHGg0BQVASTHpUWCrWVqDkqfqGtLUlV
        0kIa7RckbgptrcHWooXSWgQLVapt4v9+WAvmGeaaPV/r432f/bvhB+Has2fe97lZXNkza9Za/OIXvwAG
        UnNV+aXyznJP+Uz50/I35e/L98uPys9W2n+3rP1Z+5j2se3vtL/bPkf7XFelrwXMVwyB+ai5rryr/E75
        u/Lz0v5gndrnbJ+7fY32ta5L1wLMRwyBaat5XfmN8q3yZOnLehva12xfu13D69I1AtMWQ2B6al5SPla+
        W/oynoJ2Te3aXpKuHZieGALTUHO+/L/yl6Uv3Cn7i9Ku+Xy6J2AaYgjsVs3Ty6+Vfy59uc5Ju/Z2D09P
        9wjsVgyB3ai5UO4q/1r6Mp2zdi/tni6kewZ2I4bA9tW8vcz5X/xHaff29nTvwPbFENiemhvLV0pfliNr
        93pjOgtge2IIbF5Ne4LfB8tPSl+QV4J2z+3ePVEQdiSGwGbVvLD8eelL8UrUzuCF6YyAzYohsDk1by3/
        UfoivJK1s3hrOitgc2IIrF9N+5b/r5ddvHLf1LUzua/4kQBsSQyB9aq5pjxY+tLjoHZG16QzBNYrhsD6
        1LQ365nTK/ntWjsrbzYEGxZDYD1qXlT+ofQFx9Hamb0onSmwHjEEzq7m5vKD0hcbx9fO7uZ0tsDZxRA4
        m5r2L//vl77QOLl2hr4TABsQQ+D0ap5bfNt/fdpZPjedNXB6MQROp+aZ5a9LX2CcXTvTZ6YzB04nhsDJ
        1bTf8/9q6YuL9Wln63UCYE1iCJxczb2romJz7k1nD5xcDIGTqXlz8Qp/m9fO+M1pB8DJxBA4vprry7+X
        vqjYnHbW16ddAMcXQ+B4as6VPyt9QbF57czPpZ0AxxND4HhqPrAqJLbvA2knwPHEEDhazQvKf63KiO1r
        Z/+CtBvgaDEEjlbz2VURsTufTbsBjhZD4PJq3tSVELv1prQj4PJiCByu5qry7VX5sHttF1elXQGHiyFw
        uJo7VsXDdNyRdgUcLoZAVtN+7e87q9JhOtpO/FognEAMgazm4qpwmJ6LaWdAFkMgq7nUFQ7TcintDMhi
        CBxU87aubJimt6XdAQfFEDio5itd0TBNX0m7Aw6KIbBfzfPKz1clw3S1HT0v7RDYL4bAfjV3rQqG6bsr
        7RDYL4bAfjWPdwXDtD2edgjsF0NgT80runJhHl6RdgnsiSGwp+bDXbEwDx9OuwT2xBDYU/NwVyzMw8Np
        l8CeGAJLNVeXn6xKhfloO7s67RRYiiGwVPOGVaEwP29IOwWWYggs1XykKxTm5SNpp8BSDIGlmq93hcK8
        fD3tFFiKIbBU84OuUJiXH6SdAksxBFp/LJ5VnlqVCfPTdvestFugHiIpBFp/LF69KhLm69Vpt0A9PFII
        tO5YvLcrEubpvWm3QD08Ugi07lh8vCsS5unjabdAPTxSCLTuWDzQFQnz9EDaLVAPjxQCrTsWX+yKhHn6
        YtotUA+PFAKtOxZf7YqEefpq2i1QD48UAq07Ft/oioR5+kbaLVAPjxQCrTsWl7oiYZ4upd0C9fBIIdC6
        Y/HdrkiYp++m3QL18Egh0Lpj8Z2uSJin76TdAvXwSCHQumPxWFckzNNjabdAPTxSCLTuWDzSFQnz9Eja
        LVAPjxQCrTsWD3ZFwjw9mHYL1MMjhUDrjsXnuyJhnj6fdgvUwyOFQOuOxf1dkTBP96fdAvXwSCHQumPx
        oa5ImKcPpd0C9fBIIdC6Y/GurkiYp3el3QL18Egh0Lpj8fKuSJinl6fdAvXwSCHQumNxdfnfVZEwP213
        V6fdAvUQSSGwVPPEqkyYnyfSToGlGAJLNV/uCoV5+XLaKbAUQ2Cp5q6uUJiXu9JOgaUYAks1t3SFwrzc
        knYKLMUQWKp5WvnPVaEwH21nT0s7BZZiCOyp8TyA+fHzfzhCDIE9Ne/rioV5eF/aJbAnhsCemhvK/62K
        helru7oh7RLYE0Ngv5qvrcqF6fta2iGwXwyB/Wre0xUM0/aetENgvxgC+9VcKD9eFQzT1XZ0Ie0Q2C+G
        wEE1n1qVDNP1qbQ74KAYAgfVvKorGqbpVWl3wEExBLKah7qyYVoeSjsDshgCWc3ru8JhWl6fdgZkMQQO
        V/NIVzpMwyNpV8DhYggcruYtXfEwDW9JuwIOF0Pg8moe7sqH3Xo47Qi4vBgCl1dzc/nZqoDYnbaDm9OO
        gMuLIXC0mvtWJcTu3Jd2AxwthsDRaq4p/7IqIravnf01aTfA0WIIHE/NO1ZlxPa9I+0EOJ4YAsdX84mu
        lNiOT6RdAMcXQ+D4ap5RHl8VE5vXzvoZaRfA8cUQOJmalxbvFrh57YxfmnYAnEwMgZOrubgqKTbnYjp7
        4ORiCJxOzb1dWbFe96YzB04nhsDp1dzflRbrcX86a+D0YgicXs358oer4uLs2lmeT2cNnF4MgbOpuVAe
        LX2RcXLtDC+kMwbOJobA2dVcW7x18Om1s7s2nS1wdjEE1qOmvUbAl0tfbBytnZnf9YcNiiGwPjXnyu+V
        vuA4XDurc+ksgfWJIbB+NR8rT5W+7NjTzuZj6eyA9YshsBk17yw/Kn3xsTyTd6YzAzYjhsDm1NxY/qr0
        BXgla2dxYzorYHNiCGxWzdXlN8uV/COBdu/tDK5OZwRsVgyB7ah5Y/l26YvxStDu+Y3pTIDtiCGwPTXt
        uwEfLP9d+pIcUbvHdq/+1Q87FkNg+2peXP6g9IU5knZvL073DmxfDIHdqXlt+eMywvMD2j20e3ltuldg
        d2II7F7NK8sXy5OlL9U5aNfcrv2V6d6A3YshMB01Lyu/Vf6t9CU7Re0a27W+LN0LMB0xBKanpr3N8FvL
        75cpPWGwXUu7pnZt3rYXZiKGwLTVPLv8cvnd8o+lL+RtaF+zfe12Dc9O1whMWwyBeam5ofxK+XRpr6y3
        zpcbbp+rfc72udvXuCFdAzAvMQTmr+b55bbyq+W+8tvlM6U9Oe9PyqMr7b9b1v6sfUz72PZ32t99fvrc
        wPzFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAY
        WwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHF
        EAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwB
        gLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAY
        WwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHF
        EAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwwB
        gLHFEAAYWwwBgLHFEAAYWwwBgLHFEAAYWwyBeau5UG4p7y4fLZ8uXygPlUfLt8oTK+2/W9b+rH1M+9j2
        d9rfbZ/jQvoawLzFEJiPmvPl1nJPebB8rzxZ2h+uQ/tc7XO2z92+Rvta59O1APMRQ2Daam4qd5dWyj8u
        fWFvQ/ua7Wu3a7gpXSMwbTEEpqfm2nJnad+uf6r0hbxL7VraNbVruzZdOzA9MQSmo+a28rny09IX7xS1
        a2zXelu6F2A6YgjsXs3t5ZulL9g5add+e7o3YPdiCOxGzblysVwqfZnOWbuXdk/n0j0DuxFDYPtq2rPr
        Hyt9eY6k3dut6d6B7YshsD0115VPlnX+6t5UtXts93pdOgtge2IIbEfNHeWHpS/JK0G75zvSmQDbEUNg
        s2qeU75U+lK8ErUzeE46I2CzYghsTs1ryj+VvgivZO0sXpPOCticGAKbUfP+8j+lL0CWZ/K+dGbAZsQQ
        WK+a9nr9D5S+9DionZH3GYAtiCGwPjXtnfn+qPRFx+HaWXkHQtiwGALrUdOe7NdeJ78vOI7WzsyTA2GD
        YgicXc315W9LX2wcXzu769PZAmcXQ+Bsatq//JX/2bUz9J0A2IAYAqdX037m79v+69PO0nMCYM1iCJxO
        TXu2vyf8rV87U78dAGsUQ+B0avyq3+Y8kM4cOJ0YAidX017kpy8s1u/96eyBk4shcDI17eV9vcLf5rUz
        9rLBsAYxBI6vpj3j32v7b087a78ZAGcUQ+D4aryr3/Z9Ke0COL4YAsdT097Pvy8mtueOtBPgeGIIHK3m
        uvLDVRmxfe3sr0u7AY4WQ+BoNZ9cFRG788m0G+BoMQQur+bW8uSqhNidtoNb046Ay4shcLiac+Wx0hcR
        u9N2cS7tCjhcDIHD1VxcFQ/TcTHtCjhcDIHD1VzqiodpuJR2BRwuhkBWc3tXOkzL7WlnQBZDIKv5Zlc4
        TMs3086ALIbAQTW3dWXDNN2WdgccFEPgoJrPdUXDNH0u7Q44KIbAfjXXlp+uSobpaju6Nu0Q2C+GwH41
        d64Khum7M+0Q2C+GwH41j3YFw7Q9mnYI7BdDYE/NTeWpVbkwfW1XN6VdAntiCOypuXtVLMzH3WmXwJ4Y
        AntqHuyKhXl4MO0S2BNDYKnmfPnxqlSYj7az82mnwFIMgaWa9ra/fbEwH94mGC4jhsBSzT1doTAv96Sd
        AksxBJZq/Px/vjwPAC4jhsBSzfe6QmFevpd2CizFEGj9sbhQnlyVCfPTdnch7Raoh0gKgdYfi1tWRcJ8
        3ZJ2C9TDI4VA647Fu7siYZ7enXYL1MMjhUDrjsVHuyJhnj6adgvUwyOFQOuOxae7ImGePp12C9TDI4VA
        647FF7oiYZ6+kHYL1MMjhUDrjsVDXZEwTw+l3QL18Egh0Lpj8WhXJMzTo2m3QD08Ugi07lh8qysS5ulb
        abdAPTxSCLTuWDzRFQnz9ETaLVAPjxQCrTv8D8AA/A8AHCKGQOsOPwIYgB8BwCFiCLTu8CTAAXgSIBwi
        hkDrDr8GOAC/BgiHiCHQusMLAQ3ACwHBIWIItO7wUsAD8FLAcIgYAq07vBnQALwZEBwihkDrDm8HPABv
        BwyHiCHQumNxS1ckzNMtabdAPTxSCLTuWFwoT66KhPlpu7uQdgvUQySFwFLN91Zlwvx8L+0UWIohsFTz
        YFcozMuDaafAUgyBpZp7ukJhXu5JOwWWYggs1dzaFQrzcmvaKbAUQ2Cp5nz58apQmI+2s/Npp8BSDIE9
        NZ4HMD9+/g9HiCGwp+burliYh7vTLoE9MQT21NxUnloVC9PXdnVT2iWwJ4bAfjWPrsqF6Xs07RDYL4bA
        fjV3dgXDtN2ZdgjsF0Ngv5pry09XBcN0tR1dm3YI7BdD4KCaz61Khun6XNodcFAMgYNqbuuKhmm6Le0O
        OCiGQFbzza5smJZvpp0BWQyBrOb2rnCYltvTzoAshsDhai51pcM0XEq7Ag4XQ+BwNRe74mEaLqZdAYeL
        IXC4mnPlsVXxsHttF+fSroDDxRC4vJr2NsFPlr6I2L62A2/7C6cQQ+BoNZ9clRC788m0G+BoMQSOVnNd
        +eGqiNi+dvbXpd0AR4shcDw1d6zKiO27I+0EOJ4YAsdX86WulNiOL6VdAMcXQ+D4ap5T/mlVTGxeO+vn
        pF0AxxdD4GRqXlP+p/RFxfq1M35N2gFwMjEETq7m/auSYnPen84eOLkYAqdT80BXVqzXA+nMgdOJIXA6
        NefLH60Ki/VpZ3o+nTlwOjEETq/mQnm09AXG6bWzvJDOGji9GAJnU9N+M+BvS19knFw7Q8/4hw2IIXB2
        NdevCqwvNI6vnd316WyBs4shsB417TsBfhxwcu3M/MsfNiiGwPrUtOcEeGLg8bWz8jN/2LAYAutV0347
        wK8IHq2dkWf7wxbEENiMmvZiQV4x8KB2Ju9LZwZsRgyBzalpLxvsvQP2tLPw8r6wZTEENqumPTnQuwgu
        z8CT/WAHYghsR80d5YelL8UrQbtn7+cPOxRDYHtqriufLE+WviRH1O6x3et16SyA7YkhsH01t5bHSl+Y
        I2n3dmu6d2D7YgjsRs25crFcKn15zlm7l3ZP59I9A7sRQ2D3am4v3yx9mc5Ju/bb070BuxdDYDpqbiuf
        Kz8tfcFOUbvGdq23pXsBpiOGwPTUXFvuLO118p8qffHuUruWdk3t2q5N1w5MTwyBaau5qdxdHiw/Ln0h
        b0P7mu1rt2u4KV0jMG0xBOajpr3PQPsNgntKK+XvlXX+SmH7XO1zts/dvkb7Wl6vH2YuhsC81bR3ILyl
        vLt8tHy6fKE8VNq3679Vnlhp/92y9mftY9rHtr/T/m77HN6ZDwYUQwBgbDEEAMYWQwBgbDEEAMYWQwBg
        bDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYW
        QwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEE
        AMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBg
        bDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYW
        QwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEE
        AMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBgbDEEAMYWQwBg
        bDEE5q/m+eW28qvlvvLb5TPli+VPyqMr7b9b1v6sfUz72PZ32t99fvrcwPzFEJiXmhvKr5RPl78qPyrt
        D9ahfa72Odvnbl/jhnQNwLzEEJi2mmeXXy6/W/6x9IW9De1rtq/druHZ6RqBaYshMD0158tby++X/y59
        Ie9Su5Z2Te3azqdrB6YnhsB01Lys/Fb5t9IX7xS1a2zX+rJ0L8B0xBDYvZpXlvbkvCdLX7Jz0K65Xfsr
        070BuxdDYHdqXlv+uDxV+lKdo3YP7V5em+4V2J0YAttX8+LyB6Uv0JG0e3txundg+2IIbE/N1eWDZUpP
        7NuUdo/tXq9OZwFsTwyB7ah5Y/l26UvyStDu+Y3pTIDtiCGwWTXtX/2/WUb4Of9ptXtvZ+C7AbADMQQ2
        p+bG0l5Zry/DK1k7ixvTWQGbE0NgM2reWdb5Mr2jaGfyznRmwGbEEFi/mo+VK/lb/kdpZ/OxdHbA+sUQ
        WJ+ac+X3Sl92HK6d1bl0lsD6xBBYj5pnlC+XvuA4WjuzZ6QzBdYjhsDZ1VxbHil9sXF87eyuTWcLnF0M
        gbOpuVAeLX2hcXLtDC+kMwbOJobA6dW0t+39w9IXGafXztLbDMOaxRA4vZr7V8XF+tyfzho4vRgCp1Nz
        b1darNe96cyB04khcHI1F7uyYjMuprMHTi6GwMnUvLT8eFVSbE4745emHQAnE0Pg+Gra7/o/XvqiYnPa
        WXuNADijGALHV/OJVTGxPZ9IuwCOL4bA8dS8oysltusdaSfA8cQQOFrNNeVfVmXE9rWzvybtBjhaDIGj
        1dy3KiJ25760G+BoMQQur+bm8rNVCbE7bQc3px0BlxdD4PJqHl4VELv3cNoRcHkxBA5X85aufJiGt6Rd
        AYeLIXC4Gm/xOz2PpF0Bh4shkNW8visdpuX1aWdAFkMgq3moKxym5aG0MyCLIXBQzau6smGaXpV2BxwU
        Q+Cgmk91RcM0fSrtDjgohsB+NReKd/ubvrajC2mHwH4xBParec+qYJi+96QdAvvFENiv5mtdwTBtX0s7
        BPaLIbCn5obyf6tyYfrarm5IuwT2xBDYU/O+VbEwH+9LuwT2xBDYU/PlrliYhy+nXQJ7Yggs1Tyt/Oeq
        VJiPtrOnpZ0CSzEElmpuWRUK83NL2imwFENgqeaurlCYl7vSToGlGAJLNX7+P1+eBwCXEUNgqeaJrlCY
        lyfSToGlGAKtPxZXl/9dlQnz03Z3ddotUA+RFAKtPxYvXxUJ8/XytFugHh4pBFp3LN7VFQnz9K60W6Ae
        HikEWncsPtQVCfP0obRboB4eKQRadyzu74qEebo/7Raoh0cKgdYdi893RcI8fT7tFqiHRwqB1h2LB7si
        YZ4eTLsF6uGRQqB1x+KRrkiYp0fSboF6eKQQaN2xeKwrEubpsbRboB4eKQRadyy+0xUJ8/SdtFugHh4p
        BFp3LL7bFQnz9N20W6AeHikEWncsLnVFwjxdSrsF6uGRQqB1x+IbXZEwT99IuwXq4ZFCoHXH4qtdkTBP
        X027BerhkUKgdcfii12RME9fTLsF6uGRQqB1x+KBrkiYpwfSboF6eKQQaN2x+HhXJMzTx9NugXp4pBBo
        3bF4b1ckzNN7026BenikEGjdsXh1VyTM06vTboF6eKQQaN2xeFZ5alUkzE/b3bPSboF6iKQQWKr5wapM
        mJ8fpJ0CSzEElmq+3hUK8/L1tFNgKYbAUs1HukJhXj6SdgosxRBYqnlDVyjMyxvSToGlGAJLNVeXn6wK
        hfloO7s67RRYiiGwp+bhVakwHw+nXQJ7YgjsqflwVyzMw4fTLoE9MQT21LyiKxbm4RVpl8CeGAL71Tze
        lQvT9njaIbBfDIH9au7qCoZpuyvtENgvhsB+Nc8rP18VDNPVdvS8tENgvxgCB9V8ZVUyTNdX0u6Ag2II
        HFTztq5omKa3pd0BB8UQyGoudWXDtFxKOwOyGAJZzcWucJiWi2lnQBZDIKs5V76zKhymo+3kXNoZkMUQ
        OFzNHavSYTruSLsCDhdD4HA1V5Vvr4qH3Wu7uCrtCjhcDIHLq3nTqnzYvTelHQGXF0PgaDWf7UqI3fhs
        2g1wtBgCR6t5QfmvVRGxfe3sX5B2AxwthsDx1HxgVUZs3wfSToDjiSFwPDXt1wL/bFVIbE87c7/2B2cQ
        Q+D4aq4v/176gmJz2llfn3YBHF8MgZOpeXN5svRFxfq1M35z2gFwMjEETq7m3lVJsTn3prMHTi6GwMnV
        nC9fXRUV69fO9nw6e+DkYgicTs0zy1+Xvrg4u3amz0xnDpxODIHTq3lu+YfSFxin187yuemsgdOLIXA2
        NS8q3y99kXFy7QxflM4YOJsYAmdXc3P5QekLjeNrZ3dzOlvg7GIIrEdN+06AHwecXDsz//KHDYohsD41
        15W/LH3Bcbh2VtelswTWJ4bAetVcUx4sfdFxUDuja9IZAusVQ2D9atrrBPx68YqBB7Uzua/4PX/YkhgC
        m1Pz1vIfpS/AK1k7i7emswI2J4bAZtW8sPx56YvwStTO4IXpjIDNiiGweTXtRwIfLD8pfSleCdo9t3v3
        LX/YkRgC21NzY/lK6QtyZO1eb0xnAWxPDIHtq3l7+efSl+VI2r29Pd07sH0xBHaj5kK5q/xr6ctzztq9
        tHu6kO4Z2I0YArtV8/Tya2XO3xFo197u4enpHoHdiiEwDTXtiYL/r8zplQT/orRr9gQ/mLAYAtNT85Ly
        sfLd0hfuFLRratf2knTtwPTEEJi2mteV3yjfKrt4ZcH2NdvXbtfwunSNwLTFEJiPmvZmQ+8qv1P+rvy8
        9GW9Du1zts/dvkb7Wt6sB2YuhsB81VxVfqm8s9xTPlP+tPxN+fvy/fKj8rOV9t8ta3/WPqZ9bPs77e+2
        z9E+11XpawFz9YvF/wcwAWxH9pOWzwAAAABJRU5ErkJggg==
</value>
  </data>
</root>